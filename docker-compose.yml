version: "3"
services:
  # gitlab-runner:
  #   image: "gitlab/gitlab-runner:latest"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./config:/etc/gitlab-runner
  #   restart: unless-stopped
  react-app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./pages:/app/pages
      - ./config:/app/config
      - ./public/locales:/app/public/locales
    # env_file:
  #   #   - ./.env
  postgres:
    image: postgres:12
    ports:
      - 5432:5432
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    build:
      context: .
      dockerfile: Dockerfile.hasura
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      ## JWT secret key
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256","key":"7c48f01ba9a3db23e469b3b9e095dfc1"}'
volumes:
  db_data:
